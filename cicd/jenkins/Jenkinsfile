def appName = 'gceme'
def dockerRepo = "${appName}"
def dockerTag  = "${env.BRANCH_NAME}.${env.BUILD_NUMBER}"
def dockerImage = "docker.io/xelit/${dockerRepo}:${dockerTag}"

pipeline {
  agent {
    kubernetes {
      label 'jenkins-worker'
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
labels:
  component: ci
namespace: ci
spec:
  serviceAccountName: cd-jenkins
  containers:
  - name: kubectl
    image: gcr.io/cloud-builders/kubectl
    command:
    - cat
    tty: true
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    command:
    - /busybox/cat
    tty: true
  volumeMounts:
  - name: kaniko-secret
    mountPath: /kaniko/.docker
  volumes:
  - name: kaniko-secret
    secret:
      secretName: regcred
      items:
      - key: .dockerconfigjson
        path: config.json
"""
}
  }
  stages {
    stage('Build') {
      steps {
        container('kaniko') {
          sh "/kaniko/executor -f `pwd`/Dockerfile -c `pwd` --insecure --skip-tls-verify --cache=true --destination=${dockerImage}"
        }
      }
    }
    stage('Deploy Production') {
      when { branch 'master' }
      steps {
        container('kubectl') {
          sh("kubectl -n production set image ")
        }
      }
    }
    stage('Deploy Dev') {
      when { branch 'develop' }
      steps {
        container('kubectl') {
          sh("kubectl -n=production set image")
        }
      }
    }
  }
}